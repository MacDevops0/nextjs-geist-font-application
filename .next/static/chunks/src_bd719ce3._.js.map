{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Button } from \"@/components/ui/button\"\n\nexport default function Home() {\n  const [pergunta, setPergunta] = useState(\"\")\n  const [mensagens, setMensagens] = useState<{tipo: \"usuario\" | \"bot\", texto: string}[]>([])\n  const [carregando, setCarregando] = useState(false)\n\n  async function enviarPergunta() {\n    if (!pergunta.trim()) return\n    \n    try {\n      console.log(\"Iniciando envio da pergunta:\", pergunta)\n      \n      // Adiciona pergunta do usuário\n      const novaMensagem = {\n        tipo: \"usuario\" as const,\n        texto: pergunta\n      }\n      \n      setMensagens(prev => {\n        console.log(\"Estado atual das mensagens:\", prev)\n        return [...prev, novaMensagem]\n      })\n      \n      setCarregando(true)\n      setPergunta(\"\")\n\n      // Obtém resposta do bot\n      const resposta = await simularRespostaBot(pergunta)\n      console.log(\"Resposta recebida do bot:\", resposta)\n      \n      // Adiciona resposta do bot\n      setMensagens(prev => {\n        const novoEstado = [...prev, {\n          tipo: \"bot\" as const,\n          texto: resposta\n        }]\n        console.log(\"Novo estado das mensagens:\", novoEstado)\n        return novoEstado\n      })\n    } catch (erro) {\n      console.error(\"Erro ao processar pergunta:\", erro)\n      setMensagens(prev => [...prev, {\n        tipo: \"bot\",\n        texto: \"Desculpe, ocorreu um erro ao processar sua pergunta. Por favor, tente novamente.\"\n      }])\n    } finally {\n      setCarregando(false)\n    }\n  }\n\n  return (\n    <main className=\"min-h-screen bg-white flex flex-col items-center justify-center p-4\">\n      {/* Cabeçalho */}\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-light mb-2\">Workshop Microsoft Azure</h1>\n        <p className=\"text-gray-500\">\n          Explore os conceitos das certificações Azure através de um assistente virtual\n        </p>\n      </div>\n\n      {/* Área de Chat */}\n      <div className=\"w-full max-w-2xl bg-white rounded-lg shadow-lg p-6\">\n        {/* Histórico de Mensagens */}\n        <div className=\"mb-6 space-y-4 max-h-[400px] overflow-y-auto\">\n          {mensagens.map((mensagem, index) => (\n            <div\n              key={index}\n              className={`p-4 rounded-lg ${\n                mensagem.tipo === \"usuario\" \n                  ? \"bg-blue-50 ml-12\" \n                  : \"bg-gray-50 mr-12\"\n              }`}\n            >\n              <p className=\"text-sm text-gray-900 whitespace-pre-line\">{mensagem.texto}</p>\n            </div>\n          ))}\n          {carregando && (\n            <div className=\"text-center text-gray-500\">\n              <p>Processando sua pergunta...</p>\n            </div>\n          )}\n        </div>\n\n        {/* Input de Pergunta */}\n        <div className=\"flex gap-2\">\n          <Input\n            placeholder=\"Digite sua pergunta sobre as certificações Microsoft...\"\n            value={pergunta}\n            onChange={(e) => setPergunta(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && enviarPergunta()}\n            className=\"flex-1\"\n          />\n          <Button \n            onClick={enviarPergunta}\n            disabled={carregando}\n          >\n            {carregando ? \"Enviando...\" : \"Enviar\"}\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\n// Função que simula respostas do bot\nasync function simularRespostaBot(pergunta: string): Promise<string> {\n  try {\n    console.log(\"Enviando pergunta:\", pergunta)\n    \n    const resposta = await fetch(\"/api/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ message: pergunta }),\n    })\n\n    if (!resposta.ok) {\n      throw new Error(\"Erro ao obter resposta do servidor\")\n    }\n\n    const data = await resposta.json()\n    console.log(\"Resposta recebida:\", data)\n    \n    if (!data.resposta) {\n      throw new Error(\"Resposta inválida do servidor\")\n    }\n\n    return data.resposta\n  } catch (erro) {\n    console.error(\"Erro ao processar pergunta:\", erro)\n    return \"Desculpe, ocorreu um erro ao processar sua pergunta. Por favor, tente novamente.\"\n  }\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8C,EAAE;IACzF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,eAAe;QACb,IAAI,CAAC,SAAS,IAAI,IAAI;QAEtB,IAAI;YACF,QAAQ,GAAG,CAAC,gCAAgC;YAE5C,+BAA+B;YAC/B,MAAM,eAAe;gBACnB,MAAM;gBACN,OAAO;YACT;YAEA,aAAa,CAAA;gBACX,QAAQ,GAAG,CAAC,+BAA+B;gBAC3C,OAAO;uBAAI;oBAAM;iBAAa;YAChC;YAEA,cAAc;YACd,YAAY;YAEZ,wBAAwB;YACxB,MAAM,WAAW,MAAM,mBAAmB;YAC1C,QAAQ,GAAG,CAAC,6BAA6B;YAEzC,2BAA2B;YAC3B,aAAa,CAAA;gBACX,MAAM,aAAa;uBAAI;oBAAM;wBAC3B,MAAM;wBACN,OAAO;oBACT;iBAAE;gBACF,QAAQ,GAAG,CAAC,8BAA8B;gBAC1C,OAAO;YACT;QACF,EAAE,OAAO,MAAM;YACb,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,aAAa,CAAA,OAAQ;uBAAI;oBAAM;wBAC7B,MAAM;wBACN,OAAO;oBACT;iBAAE;QACJ,SAAU;YACR,cAAc;QAChB;IACF;IAEA,qBACE,6LAAC;QAAK,WAAU;;0BAEd,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2B;;;;;;kCACzC,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;0BAM/B,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;4BACZ,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,6LAAC;oCAEC,WAAW,CAAC,eAAe,EACzB,SAAS,IAAI,KAAK,YACd,qBACA,oBACJ;8CAEF,cAAA,6LAAC;wCAAE,WAAU;kDAA6C,SAAS,KAAK;;;;;;mCAPnE;;;;;4BAUR,4BACC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;8CAAE;;;;;;;;;;;;;;;;;kCAMT,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,oIAAA,CAAA,QAAK;gCACJ,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;gCACvC,WAAU;;;;;;0CAEZ,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU;0CAET,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;AAM1C;GArGwB;KAAA;AAuGxB,qCAAqC;AACrC,eAAe,mBAAmB,QAAgB;IAChD,IAAI;QACF,QAAQ,GAAG,CAAC,sBAAsB;QAElC,MAAM,WAAW,MAAM,MAAM,aAAa;YACxC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,SAAS;YAAS;QAC3C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,sBAAsB;QAElC,IAAI,CAAC,KAAK,QAAQ,EAAE;YAClB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,KAAK,QAAQ;IACtB,EAAE,OAAO,MAAM;QACb,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF","debugId":null}}]
}